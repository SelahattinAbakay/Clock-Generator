

================================================================
== Vivado HLS Report for 'clock_generator'
================================================================
* Date:           Thu May  9 13:54:20 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        clock_generator-vhls
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 3.498 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|   0 ns   |   0 ns   |    0|    0|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.49>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_clock) nounwind, !map !7"   --->   Operation 2 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([16 x i8]* @clock_generator_str) nounwind"   --->   Operation 3 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* %out_clock, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [clock_generator-vhls/clock_generator.cpp:8]   --->   Operation 4 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [clock_generator-vhls/clock_generator.cpp:9]   --->   Operation 5 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%state_load = load i1* @state, align 1" [clock_generator-vhls/clock_generator.cpp:21]   --->   Operation 6 'load' 'state_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%counter_load = load i32* @counter, align 4" [clock_generator-vhls/clock_generator.cpp:33]   --->   Operation 7 'load' 'counter_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (2.43ns)   --->   "%icmp_ln33 = icmp eq i32 %counter_load, 0" [clock_generator-vhls/clock_generator.cpp:33]   --->   Operation 8 'icmp' 'icmp_ln33' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (2.70ns)   --->   "%next_counter = add i32 %counter_load, -1" [clock_generator-vhls/clock_generator.cpp:37]   --->   Operation 9 'add' 'next_counter' <Predicate = (!icmp_ln33)> <Delay = 2.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.79ns)   --->   "%select_ln33 = select i1 %icmp_ln33, i32 9, i32 %next_counter" [clock_generator-vhls/clock_generator.cpp:33]   --->   Operation 10 'select' 'select_ln33' <Predicate = true> <Delay = 0.79> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node select_ln21)   --->   "%xor_ln33 = xor i1 %icmp_ln33, true" [clock_generator-vhls/clock_generator.cpp:33]   --->   Operation 11 'xor' 'xor_ln33' <Predicate = (state_load)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln21 = select i1 %state_load, i1 %xor_ln33, i1 %icmp_ln33" [clock_generator-vhls/clock_generator.cpp:21]   --->   Operation 12 'select' 'select_ln21' <Predicate = true> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "store i1 %select_ln21, i1* @state, align 1" [clock_generator-vhls/clock_generator.cpp:46]   --->   Operation 13 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "store i32 %select_ln33, i32* @counter, align 4" [clock_generator-vhls/clock_generator.cpp:47]   --->   Operation 14 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i1P(i1* %out_clock, i1 %state_load) nounwind" [clock_generator-vhls/clock_generator.cpp:48]   --->   Operation 15 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "ret void" [clock_generator-vhls/clock_generator.cpp:50]   --->   Operation 16 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.5ns
The critical path consists of the following:
	'load' operation ('counter_load', clock_generator-vhls/clock_generator.cpp:33) on static variable 'counter' [11]  (0 ns)
	'add' operation ('next_counter', clock_generator-vhls/clock_generator.cpp:37) [13]  (2.7 ns)
	'select' operation ('select_ln33', clock_generator-vhls/clock_generator.cpp:33) [14]  (0.796 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
